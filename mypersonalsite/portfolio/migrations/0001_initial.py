# Generated by Django 5.1.2 on 2024-11-14 10:07

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ContactInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(help_text='Email address for contacting the site owner.', max_length=254)),
                ('linkedin_url', models.URLField(help_text='URL of the LinkedIn profile.')),
                ('github_url', models.URLField(help_text='URL of the GitHub profile.')),
            ],
            options={
                'verbose_name': 'Contact Information',
                'verbose_name_plural': 'Contact Information',
            },
        ),
        migrations.CreateModel(
            name='Folder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text="Name of the folder, e.g., 'Documentation'.", max_length=100)),
            ],
            options={
                'verbose_name': 'Folder',
                'verbose_name_plural': 'Folders',
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Title of the project.', max_length=100)),
                ('description', models.TextField(help_text='Detailed description of the project.')),
                ('date', models.DateField(help_text='Date of project completion or start date.')),
                ('technologies', models.CharField(help_text='Comma-separated list of technologies used.', max_length=200)),
                ('public_url', models.URLField(blank=True, help_text='Public link, e.g., GitHub or live demo.', null=True)),
                ('private_url', models.URLField(blank=True, help_text='Private link, e.g., Google Drive or restricted resource.', null=True)),
                ('is_public', models.BooleanField(default=True, help_text='Flag to indicate if project is publicly visible.')),
            ],
            options={
                'verbose_name': 'Project',
                'verbose_name_plural': 'Projects',
            },
        ),
        migrations.CreateModel(
            name='Skill',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='The name of the skill (e.g., Python, Data Analysis).', max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='File',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text="Name of the file, e.g., 'Project_Plan.pdf'.", max_length=100)),
                ('file', models.FileField(help_text='File to be uploaded for the project.', upload_to='project_files/')),
                ('is_private', models.BooleanField(default=False, help_text='Flag to indicate if the file is private.')),
                ('folder', models.ForeignKey(help_text='The folder to which this file belongs.', on_delete=django.db.models.deletion.CASCADE, related_name='files', to='portfolio.folder')),
            ],
            options={
                'verbose_name': 'File',
                'verbose_name_plural': 'Files',
            },
        ),
        migrations.AddField(
            model_name='folder',
            name='project',
            field=models.ForeignKey(help_text='The project to which this folder belongs.', on_delete=django.db.models.deletion.CASCADE, related_name='folders', to='portfolio.project'),
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reviewer_name', models.CharField(help_text='Name of the reviewer submitting the review.', max_length=100)),
                ('content', models.TextField(help_text='Content of the review.')),
                ('recommendation', models.BooleanField(default=False, help_text='Does the reviewer recommend this project?')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approved'), ('rejected', 'Rejected')], default='pending', help_text='Approval status of the review.', max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Timestamp for when the review was created.')),
                ('project', models.ForeignKey(help_text='The project this review is associated with.', on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='portfolio.project')),
            ],
        ),
        migrations.CreateModel(
            name='Education',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('institution', models.CharField(help_text='Name of the educational institution.', max_length=255)),
                ('degree', models.CharField(choices=[('Bachelors', 'Bachelors'), ('Masters', 'Masters'), ('PhD', 'PhD'), ('Other', 'Other')], help_text="Degree type (e.g., Bachelor's, Master's).", max_length=50)),
                ('field_of_study', models.CharField(help_text='Field of study (e.g., Computer Science).', max_length=255)),
                ('start_date', models.DateField(help_text='Start date of the program.')),
                ('end_date', models.DateField(help_text='End date of the program, or expected end date.')),
                ('description', models.TextField(blank=True, help_text='Optional description of the program or notable achievements.')),
                ('skills', models.ManyToManyField(blank=True, help_text='Skills related to this educational entry.', related_name='educations', to='portfolio.skill')),
            ],
        ),
        migrations.CreateModel(
            name='Certificate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='The title of the certificate.', max_length=255)),
                ('description', models.TextField(help_text='Description of the course.')),
                ('link', models.URLField(help_text='URL to the certificate or course information.')),
                ('skills', models.ManyToManyField(blank=True, help_text='Skills related to this certificate.', related_name='certificates', to='portfolio.skill')),
            ],
        ),
    ]

# Generated by Django 5.1.2 on 2025-01-07 10:49

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ActiveSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_id', models.CharField(help_text='Unique identifier for the session.', max_length=100, verbose_name='Session ID')),
                ('user', models.CharField(help_text='Identifier for the user associated with the session.', max_length=100, verbose_name='User')),
                ('start_time', models.DateTimeField(help_text='Timestamp when the session started.', verbose_name='Session Start Time')),
                ('last_activity', models.DateTimeField(help_text='Timestamp of the last activity in this session.', verbose_name='Last Activity Time')),
            ],
            options={
                'verbose_name': 'Active Session',
                'verbose_name_plural': 'Active Sessions',
            },
        ),
        migrations.CreateModel(
            name='BusinessPerformanceMetric',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_views', models.PositiveIntegerField(default=0, help_text='Total number of portfolio views.', verbose_name='Total Portfolio Views')),
                ('unique_visitors', models.PositiveIntegerField(default=0, help_text='Number of unique visitors to the portfolio.', verbose_name='Unique Visitors')),
                ('average_time_on_portfolio', models.DurationField(help_text='Average time spent by users on the portfolio.', verbose_name='Average Time on Portfolio')),
                ('ctr_contact_button', models.FloatField(default=0.0, help_text="Click-through rate (CTR) for the 'Send Message' button on the Contact Me page.", verbose_name='Contact Button CTR')),
                ('date', models.DateField(auto_now_add=True, help_text='Date for which the metrics are tracked.', verbose_name='Date')),
            ],
            options={
                'verbose_name': 'Business Performance Metric',
                'verbose_name_plural': 'Business Performance Metrics',
            },
        ),
        migrations.CreateModel(
            name='EngagementMetric',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_sessions', models.PositiveIntegerField(default=0, help_text='Total number of user sessions.', verbose_name='User Sessions')),
                ('pages_per_session', models.FloatField(default=0.0, help_text='Average number of pages viewed per session.', verbose_name='Pages Per Session')),
                ('bounce_rate', models.FloatField(default=0.0, help_text='Percentage of users who leave after viewing only one page.', verbose_name='Bounce Rate (%)')),
                ('active_users', models.PositiveIntegerField(default=0, help_text='Number of active users currently on the portfolio.', verbose_name='Active Users')),
                ('top_pages_visited', models.JSONField(default=dict, help_text="JSON data for top pages visited, e.g., {'Home': 150, 'About': 100}.", verbose_name='Top Pages Visited')),
                ('date', models.DateField(auto_now_add=True, help_text='Date for which the metrics are tracked.', verbose_name='Date')),
            ],
            options={
                'verbose_name': 'Engagement Metric',
                'verbose_name_plural': 'Engagement Metrics',
            },
        ),
        migrations.CreateModel(
            name='LoginAttempt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.CharField(help_text='Identifier for the user attempting to log in.', max_length=100, verbose_name='User')),
                ('timestamp', models.DateTimeField(auto_now_add=True, help_text='Timestamp of the login attempt.', verbose_name='Timestamp')),
                ('success', models.BooleanField(default=False, help_text='Indicates whether the login attempt was successful.', verbose_name='Successful Attempt')),
                ('ip_address', models.GenericIPAddressField(help_text='IP address of the user attempting to log in.', verbose_name='IP Address')),
            ],
            options={
                'verbose_name': 'Login Attempt',
                'verbose_name_plural': 'Login Attempts',
            },
        ),
        migrations.CreateModel(
            name='SystemHealthIndicator',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('Operational', 'Operational'), ('Degraded', 'Degraded'), ('Down', 'Down')], default='Operational', help_text='Overall health status of the system.', max_length=50, verbose_name='System Status')),
                ('last_checked', models.DateTimeField(auto_now=True, help_text='Timestamp of the last health check.', verbose_name='Last Checked')),
                ('errors_logged', models.PositiveIntegerField(default=0, help_text='Number of errors logged since the last health check.', verbose_name='Errors Logged')),
                ('uptime_percentage', models.FloatField(default=100.0, help_text='Percentage of uptime in the monitoring period.', verbose_name='Uptime Percentage')),
            ],
            options={
                'verbose_name': 'System Health Indicator',
                'verbose_name_plural': 'System Health Indicators',
            },
        ),
    ]
